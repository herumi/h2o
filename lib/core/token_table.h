/*
 * Copyright (c) 2014 DeNA Co., Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */

/* DO NOT EDIT! generated by tokens.pl */
h2o_token_t h2o__tokens[] = {
    { { H2O_STRLIT(":authority") }, 1, 0, 0 },
    { { H2O_STRLIT(":method") }, 2, 0, 0 },
    { { H2O_STRLIT(":path") }, 4, 0, 0 },
    { { H2O_STRLIT(":scheme") }, 6, 0, 0 },
    { { H2O_STRLIT(":status") }, 8, 0, 0 },
    { { H2O_STRLIT("accept") }, 19, 0, 0 },
    { { H2O_STRLIT("accept-charset") }, 15, 0, 0 },
    { { H2O_STRLIT("accept-encoding") }, 16, 0, 0 },
    { { H2O_STRLIT("accept-language") }, 17, 0, 0 },
    { { H2O_STRLIT("accept-ranges") }, 18, 0, 0 },
    { { H2O_STRLIT("access-control-allow-origin") }, 20, 0, 0 },
    { { H2O_STRLIT("age") }, 21, 0, 0 },
    { { H2O_STRLIT("allow") }, 22, 0, 0 },
    { { H2O_STRLIT("authorization") }, 23, 0, 0 },
    { { H2O_STRLIT("cache-control") }, 24, 0, 0 },
    { { H2O_STRLIT("connection") }, 0, 1, 0 },
    { { H2O_STRLIT("content-disposition") }, 25, 0, 0 },
    { { H2O_STRLIT("content-encoding") }, 26, 0, 0 },
    { { H2O_STRLIT("content-language") }, 27, 0, 0 },
    { { H2O_STRLIT("content-length") }, 28, 0, 1 },
    { { H2O_STRLIT("content-location") }, 29, 0, 0 },
    { { H2O_STRLIT("content-range") }, 30, 0, 0 },
    { { H2O_STRLIT("content-type") }, 31, 0, 0 },
    { { H2O_STRLIT("cookie") }, 32, 0, 0 },
    { { H2O_STRLIT("date") }, 33, 1, 0 },
    { { H2O_STRLIT("etag") }, 34, 0, 0 },
    { { H2O_STRLIT("expect") }, 35, 0, 1 },
    { { H2O_STRLIT("expires") }, 36, 0, 0 },
    { { H2O_STRLIT("from") }, 37, 0, 0 },
    { { H2O_STRLIT("host") }, 38, 0, 1 },
    { { H2O_STRLIT("http2-settings") }, 0, 1, 0 },
    { { H2O_STRLIT("if-match") }, 39, 0, 0 },
    { { H2O_STRLIT("if-modified-since") }, 40, 0, 0 },
    { { H2O_STRLIT("if-none-match") }, 41, 0, 0 },
    { { H2O_STRLIT("if-range") }, 42, 0, 0 },
    { { H2O_STRLIT("if-unmodified-since") }, 43, 0, 0 },
    { { H2O_STRLIT("last-modified") }, 44, 0, 0 },
    { { H2O_STRLIT("link") }, 45, 0, 0 },
    { { H2O_STRLIT("location") }, 46, 0, 0 },
    { { H2O_STRLIT("max-forwards") }, 47, 0, 0 },
    { { H2O_STRLIT("proxy-authenticate") }, 48, 1, 0 },
    { { H2O_STRLIT("proxy-authorization") }, 49, 1, 0 },
    { { H2O_STRLIT("range") }, 50, 0, 0 },
    { { H2O_STRLIT("referer") }, 51, 0, 0 },
    { { H2O_STRLIT("refresh") }, 52, 0, 0 },
    { { H2O_STRLIT("retry-after") }, 53, 0, 0 },
    { { H2O_STRLIT("server") }, 54, 1, 0 },
    { { H2O_STRLIT("set-cookie") }, 55, 0, 0 },
    { { H2O_STRLIT("strict-transport-security") }, 56, 0, 0 },
    { { H2O_STRLIT("transfer-encoding") }, 57, 1, 1 },
    { { H2O_STRLIT("upgrade") }, 0, 1, 1 },
    { { H2O_STRLIT("user-agent") }, 58, 0, 0 },
    { { H2O_STRLIT("vary") }, 59, 0, 0 },
    { { H2O_STRLIT("via") }, 60, 0, 0 },
    { { H2O_STRLIT("www-authenticate") }, 61, 0, 0 },
    { { H2O_STRLIT("x-reproxy-url") }, 0, 0, 0 }
};
size_t h2o__num_tokens = 56;
#include "fast_diff.h"

const h2o_token_t *h2o_lookup_token(const char *name, size_t len)
{
    switch (len) {
    case 3:
        switch (name[2]) {
        case 'a':
            if (!local_is_diff2(name, 'v', 'i'))
                return H2O_TOKEN_VIA;
            break;
        case 'e':
            if (!local_is_diff2(name, 'a', 'g'))
                return H2O_TOKEN_AGE;
            break;
        }
        break;
    case 4:
        switch (name[3]) {
        case 'e':
            if (!local_is_diff3(name, 'd', 'a', 't'))
                return H2O_TOKEN_DATE;
            break;
        case 'g':
            if (!local_is_diff3(name, 'e', 't', 'a'))
                return H2O_TOKEN_ETAG;
            break;
        case 'k':
            if (!local_is_diff3(name, 'l', 'i', 'n'))
                return H2O_TOKEN_LINK;
            break;
        case 'm':
            if (!local_is_diff3(name, 'f', 'r', 'o'))
                return H2O_TOKEN_FROM;
            break;
        case 't':
            if (!local_is_diff3(name, 'h', 'o', 's'))
                return H2O_TOKEN_HOST;
            break;
        case 'y':
            if (!local_is_diff3(name, 'v', 'a', 'r'))
                return H2O_TOKEN_VARY;
            break;
        }
        break;
    case 5:
        switch (name[4]) {
        case 'e':
            if (!local_is_diff4(name, 'r', 'a', 'n', 'g'))
                return H2O_TOKEN_RANGE;
            break;
        case 'h':
            if (!local_is_diff4(name, ':', 'p', 'a', 't'))
                return H2O_TOKEN_PATH;
            break;
        case 'w':
            if (!local_is_diff4(name, 'a', 'l', 'l', 'o'))
                return H2O_TOKEN_ALLOW;
            break;
        }
        break;
    case 6:
        switch (name[5]) {
        case 'e':
            if (!local_is_diff5(name, 'c', 'o', 'o', 'k', 'i'))
                return H2O_TOKEN_COOKIE;
            break;
        case 'r':
            if (!local_is_diff5(name, 's', 'e', 'r', 'v', 'e'))
                return H2O_TOKEN_SERVER;
            break;
        case 't':
            if (!local_is_diff5(name, 'a', 'c', 'c', 'e', 'p'))
                return H2O_TOKEN_ACCEPT;
            if (!local_is_diff5(name, 'e', 'x', 'p', 'e', 'c'))
                return H2O_TOKEN_EXPECT;
            break;
        }
        break;
    case 7:
        switch (name[6]) {
        case 'd':
            if (!local_is_diff6(name, ':', 'm', 'e', 't', 'h', 'o'))
                return H2O_TOKEN_METHOD;
            break;
        case 'e':
            if (!local_is_diff6(name, ':', 's', 'c', 'h', 'e', 'm'))
                return H2O_TOKEN_SCHEME;
            if (!local_is_diff6(name, 'u', 'p', 'g', 'r', 'a', 'd'))
                return H2O_TOKEN_UPGRADE;
            break;
        case 'h':
            if (!local_is_diff6(name, 'r', 'e', 'f', 'r', 'e', 's'))
                return H2O_TOKEN_REFRESH;
            break;
        case 'r':
            if (!local_is_diff6(name, 'r', 'e', 'f', 'e', 'r', 'e'))
                return H2O_TOKEN_REFERER;
            break;
        case 's':
            if (!local_is_diff6(name, ':', 's', 't', 'a', 't', 'u'))
                return H2O_TOKEN_STATUS;
            if (!local_is_diff6(name, 'e', 'x', 'p', 'i', 'r', 'e'))
                return H2O_TOKEN_EXPIRES;
            break;
        }
        break;
    case 8:
        switch (name[7]) {
        case 'e':
            if (!local_is_diff7(name, 'i', 'f', '-', 'r', 'a', 'n', 'g'))
                return H2O_TOKEN_IF_RANGE;
            break;
        case 'h':
            if (!local_is_diff7(name, 'i', 'f', '-', 'm', 'a', 't', 'c'))
                return H2O_TOKEN_IF_MATCH;
            break;
        case 'n':
            if (!local_is_diff7(name, 'l', 'o', 'c', 'a', 't', 'i', 'o'))
                return H2O_TOKEN_LOCATION;
            break;
        }
        break;
    case 10:
        switch (name[9]) {
        case 'e':
            if (!local_is_diff9(name, 's', 'e', 't', '-', 'c', 'o', 'o', 'k', 'i'))
                return H2O_TOKEN_SET_COOKIE;
            break;
        case 'n':
            if (!local_is_diff9(name, 'c', 'o', 'n', 'n', 'e', 'c', 't', 'i', 'o'))
                return H2O_TOKEN_CONNECTION;
            break;
        case 't':
            if (!local_is_diff9(name, 'u', 's', 'e', 'r', '-', 'a', 'g', 'e', 'n'))
                return H2O_TOKEN_USER_AGENT;
            break;
        case 'y':
            if (!local_is_diff9(name, ':', 'a', 'u', 't', 'h', 'o', 'r', 'i', 't'))
                return H2O_TOKEN_AUTHORITY;
            break;
        }
        break;
    case 11:
        switch (name[10]) {
        case 'r':
            if (!local_is_diff10(name, 'r', 'e', 't', 'r', 'y', '-', 'a', 'f', 't', 'e'))
                return H2O_TOKEN_RETRY_AFTER;
            break;
        }
        break;
    case 12:
        switch (name[11]) {
        case 'e':
            if (!local_is_diff11(name, 'c', 'o', 'n', 't', 'e', 'n', 't', '-', 't', 'y', 'p'))
                return H2O_TOKEN_CONTENT_TYPE;
            break;
        case 's':
            if (!local_is_diff11(name, 'm', 'a', 'x', '-', 'f', 'o', 'r', 'w', 'a', 'r', 'd'))
                return H2O_TOKEN_MAX_FORWARDS;
            break;
        }
        break;
    case 13:
        switch (name[12]) {
        case 'd':
            if (!local_is_diff12(name, 'l', 'a', 's', 't', '-', 'm', 'o', 'd', 'i', 'f', 'i', 'e'))
                return H2O_TOKEN_LAST_MODIFIED;
            break;
        case 'e':
            if (!local_is_diff12(name, 'c', 'o', 'n', 't', 'e', 'n', 't', '-', 'r', 'a', 'n', 'g'))
                return H2O_TOKEN_CONTENT_RANGE;
            break;
        case 'h':
            if (!local_is_diff12(name, 'i', 'f', '-', 'n', 'o', 'n', 'e', '-', 'm', 'a', 't', 'c'))
                return H2O_TOKEN_IF_NONE_MATCH;
            break;
        case 'l':
            if (!local_is_diff12(name, 'c', 'a', 'c', 'h', 'e', '-', 'c', 'o', 'n', 't', 'r', 'o'))
                return H2O_TOKEN_CACHE_CONTROL;
            if (!local_is_diff12(name, 'x', '-', 'r', 'e', 'p', 'r', 'o', 'x', 'y', '-', 'u', 'r'))
                return H2O_TOKEN_X_REPROXY_URL;
            break;
        case 'n':
            if (!local_is_diff12(name, 'a', 'u', 't', 'h', 'o', 'r', 'i', 'z', 'a', 't', 'i', 'o'))
                return H2O_TOKEN_AUTHORIZATION;
            break;
        case 's':
            if (!local_is_diff12(name, 'a', 'c', 'c', 'e', 'p', 't', '-', 'r', 'a', 'n', 'g', 'e'))
                return H2O_TOKEN_ACCEPT_RANGES;
            break;
        }
        break;
    case 14:
        switch (name[13]) {
        case 'h':
            if (!local_is_diff13(name, 'c', 'o', 'n', 't', 'e', 'n', 't', '-', 'l', 'e', 'n', 'g', 't'))
                return H2O_TOKEN_CONTENT_LENGTH;
            break;
        case 's':
            if (!local_is_diff13(name, 'h', 't', 't', 'p', '2', '-', 's', 'e', 't', 't', 'i', 'n', 'g'))
                return H2O_TOKEN_HTTP2_SETTINGS;
            break;
        case 't':
            if (!local_is_diff13(name, 'a', 'c', 'c', 'e', 'p', 't', '-', 'c', 'h', 'a', 'r', 's', 'e'))
                return H2O_TOKEN_ACCEPT_CHARSET;
            break;
        }
        break;
    case 15:
        switch (name[14]) {
        case 'e':
            if (!local_is_diff14(name, 'a', 'c', 'c', 'e', 'p', 't', '-', 'l', 'a', 'n', 'g', 'u', 'a', 'g'))
                return H2O_TOKEN_ACCEPT_LANGUAGE;
            break;
        case 'g':
            if (!local_is_diff14(name, 'a', 'c', 'c', 'e', 'p', 't', '-', 'e', 'n', 'c', 'o', 'd', 'i', 'n'))
                return H2O_TOKEN_ACCEPT_ENCODING;
            break;
        }
        break;
    case 16:
        switch (name[15]) {
        case 'e':
            if (!local_is_diff15(name, 'c', 'o', 'n', 't', 'e', 'n', 't', '-', 'l', 'a', 'n', 'g', 'u', 'a', 'g'))
                return H2O_TOKEN_CONTENT_LANGUAGE;
            if (!local_is_diff15(name, 'w', 'w', 'w', '-', 'a', 'u', 't', 'h', 'e', 'n', 't', 'i', 'c', 'a', 't'))
                return H2O_TOKEN_WWW_AUTHENTICATE;
            break;
        case 'g':
            if (!local_is_diff15(name, 'c', 'o', 'n', 't', 'e', 'n', 't', '-', 'e', 'n', 'c', 'o', 'd', 'i', 'n'))
                return H2O_TOKEN_CONTENT_ENCODING;
            break;
        case 'n':
            if (!local_is_diff15(name, 'c', 'o', 'n', 't', 'e', 'n', 't', '-', 'l', 'o', 'c', 'a', 't', 'i', 'o'))
                return H2O_TOKEN_CONTENT_LOCATION;
            break;
        }
        break;
    case 17:
        switch (name[16]) {
        case 'e':
            if (!local_is_diff16(name, 'i', 'f', '-', 'm', 'o', 'd', 'i', 'f', 'i', 'e', 'd', '-', 's', 'i', 'n', 'c'))
                return H2O_TOKEN_IF_MODIFIED_SINCE;
            break;
        case 'g':
            if (!local_is_diff16(name, 't', 'r', 'a', 'n', 's', 'f', 'e', 'r', '-', 'e', 'n', 'c', 'o', 'd', 'i', 'n'))
                return H2O_TOKEN_TRANSFER_ENCODING;
            break;
        }
        break;
    case 18:
        switch (name[17]) {
        case 'e':
            if (!local_is_diff17(name, 'p', 'r', 'o', 'x', 'y', '-', 'a', 'u', 't', 'h', 'e', 'n', 't', 'i', 'c', 'a', 't'))
                return H2O_TOKEN_PROXY_AUTHENTICATE;
            break;
        }
        break;
    case 19:
        switch (name[18]) {
        case 'e':
            if (!local_is_diff18(name, 'i', 'f', '-', 'u', 'n', 'm', 'o', 'd', 'i', 'f', 'i', 'e', 'd', '-', 's', 'i', 'n', 'c'))
                return H2O_TOKEN_IF_UNMODIFIED_SINCE;
            break;
        case 'n':
            if (!local_is_diff18(name, 'c', 'o', 'n', 't', 'e', 'n', 't', '-', 'd', 'i', 's', 'p', 'o', 's', 'i', 't', 'i', 'o'))
                return H2O_TOKEN_CONTENT_DISPOSITION;
            if (!local_is_diff18(name, 'p', 'r', 'o', 'x', 'y', '-', 'a', 'u', 't', 'h', 'o', 'r', 'i', 'z', 'a', 't', 'i', 'o'))
                return H2O_TOKEN_PROXY_AUTHORIZATION;
            break;
        }
        break;
    case 25:
        switch (name[24]) {
        case 'y':
            if (!local_is_diff24(name, 's', 't', 'r', 'i', 'c', 't', '-', 't', 'r', 'a', 'n', 's', 'p', 'o', 'r', 't', '-', 's', 'e', 'c', 'u', 'r', 'i', 't'))
                return H2O_TOKEN_STRICT_TRANSPORT_SECURITY;
            break;
        }
        break;
    case 27:
        switch (name[26]) {
        case 'n':
            if (!local_is_diff26(name, 'a', 'c', 'c', 'e', 's', 's', '-', 'c', 'o', 'n', 't', 'r', 'o', 'l', '-', 'a', 'l', 'l', 'o', 'w', '-', 'o', 'r', 'i', 'g', 'i'))
                return H2O_TOKEN_ACCESS_CONTROL_ALLOW_ORIGIN;
            break;
        }
        break;
    }

    return NULL;
}
